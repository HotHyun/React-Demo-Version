{"ast":null,"code":"var _jsxFileName = \"/Users/gazilab_sanghyeon/Desktop/React/Demo Version 3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/state/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const Check_LogIn = localStorage.getItem('isLoggedIn'); // localStorage에서 isLoggedIn 이라는 이름을 가진 Item을 가져옴\n    if (Check_LogIn === '1') {\n      setIsLoggedIn(true); // 만약 Item의 value가 1이라면 setIsLoggedIn을 true로 세팅 -> true에 종속된 컴포넌트만 출력될 것임\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1'); // 로그인을 눌렀을 때 localStorage에 isLogggedIn 이름을 가진 Item의 value를 1로 저장\n    setIsLoggedIn(true); // isLoggedIn 변수를 true로 설정\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn'); // 로그아웃을 눌렀을 때 localStorage에 isLoggedIn 이름을 가진 Item을 삭제\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: isLoggedIn = isLoggedIn,\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","Check_LogIn","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["/Users/gazilab_sanghyeon/Desktop/React/Demo Version 3/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/state/auth-context';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const Check_LogIn = localStorage.getItem('isLoggedIn'); // localStorage에서 isLoggedIn 이라는 이름을 가진 Item을 가져옴\n        if (Check_LogIn === '1') {\n            setIsLoggedIn(true); // 만약 Item의 value가 1이라면 setIsLoggedIn을 true로 세팅 -> true에 종속된 컴포넌트만 출력될 것임\n        }\n    }, []);\n\n    const loginHandler = (email, password) => {\n        // We should of course check email and password\n        // But it's just a dummy/ demo anyways\n        localStorage.setItem('isLoggedIn', '1'); // 로그인을 눌렀을 때 localStorage에 isLogggedIn 이름을 가진 Item의 value를 1로 저장\n        setIsLoggedIn(true); // isLoggedIn 변수를 true로 설정\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn'); // 로그아웃을 눌렀을 때 localStorage에 isLoggedIn 이름을 가진 Item을 삭제\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <AuthContext.Provider value={(isLoggedIn = isLoggedIn)}>\n            <MainHeader onLogout={logoutHandler} />\n            <main>\n                {!isLoggedIn && <Login onLogin={loginHandler} />}\n                {isLoggedIn && <Home onLogout={logoutHandler} />}\n            </main>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,iCAAiC;AAAC;AAE1D,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;IACxD,IAAIF,WAAW,KAAK,GAAG,EAAE;MACrBD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACtC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IACzCP,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,MAAMQ,aAAa,GAAG,MAAM;IACxBN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;IACvCT,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAGD,UAAU,GAAGA,UAAY;IAAA,wBACnD,QAAC,UAAU;MAAC,QAAQ,EAAES;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACvC;MAAA,WACK,CAACT,UAAU,iBAAI,QAAC,KAAK;QAAC,OAAO,EAAEK;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CL,UAAU,iBAAI,QAAC,IAAI;QAAC,QAAQ,EAAES;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C;EAAA;IAAA;IAAA;IAAA;EAAA,QACY;AAE/B;AAAC,GA/BQV,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}