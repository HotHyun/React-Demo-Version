{"ast":null,"code":"var _jsxFileName = \"/Users/gazilab_sanghyeon/Desktop/React/Demo Version 5/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const request = async () => {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films');\n    const data = await response.json();\n    const Items = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(Items);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: request,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found No Movies.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 55\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","request","response","fetch","data","json","Items","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"sources":["/Users/gazilab_sanghyeon/Desktop/React/Demo Version 5/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const request = async () => {\n        setIsLoading(true);\n        const response = await fetch('https://swapi.dev/api/films');\n        const data = await response.json();\n        const Items = data.results.map((movieData) => {\n            return {\n                id: movieData.episode_id,\n                title: movieData.title,\n                openingText: movieData.opening_crawl,\n                releaseDate: movieData.release_date,\n            };\n        });\n        setMovies(Items);\n        setIsLoading(false);\n    };\n\n    return (\n        <React.Fragment>\n            <section>\n                <button onClick={request}>Fetch Movies</button>\n            </section>\n            <section>\n                {!isLoading && movies.length > 0 && (\n                    <MoviesList movies={movies} />\n                )}\n                {!isLoading && movies.length === 0 && <p>Found No Movies.</p>}\n                {isLoading && <p>Loading...</p>}\n            </section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,OAAO,GAAG,YAAY;IACxBD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MAC1C,OAAO;QACHC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MAC3B,CAAC;IACL,CAAC,CAAC;IACFlB,SAAS,CAACQ,KAAK,CAAC;IAChBN,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX;MAAA,uBACI;QAAQ,OAAO,EAAEC,OAAQ;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACzC,eACV;MAAA,WACK,CAACF,SAAS,IAAIF,MAAM,CAACoB,MAAM,GAAG,CAAC,iBAC5B,QAAC,UAAU;QAAC,MAAM,EAAEpB;MAAO;QAAA;QAAA;QAAA;MAAA,QAC9B,EACA,CAACE,SAAS,IAAIF,MAAM,CAACoB,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,EAC5DlB,SAAS,iBAAI;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEzB;AAAC,GAlCQH,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}